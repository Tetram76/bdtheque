package org.tetram.bdtheque.data.model;

// Generated 10 nov. 2012 15:28:13 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * AuteursParabd generated by hbm2java
 */
@Entity
@Table(name = "AUTEURS_PARABD", uniqueConstraints = @UniqueConstraint(columnNames = "ID_AUTEUR_PARABD"))
public class AuteursParabd implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private AuteursParabdId id;
	private Personnes personnes;
	private Parabd parabd;
	private String idAuteurParabd;
	private Date dcAuteursParabd;
	private Date dmAuteursParabd;

	public AuteursParabd() {
	}

	public AuteursParabd(AuteursParabdId id, Personnes personnes,
			Parabd parabd, String idAuteurParabd, Date dcAuteursParabd,
			Date dmAuteursParabd) {
		this.id = id;
		this.personnes = personnes;
		this.parabd = parabd;
		this.idAuteurParabd = idAuteurParabd;
		this.dcAuteursParabd = dcAuteursParabd;
		this.dmAuteursParabd = dmAuteursParabd;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "idParabd", column = @Column(name = "ID_PARABD", nullable = false, length = 38)),
			@AttributeOverride(name = "idPersonne", column = @Column(name = "ID_PERSONNE", nullable = false, length = 38)) })
	public AuteursParabdId getId() {
		return this.id;
	}

	public void setId(AuteursParabdId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_PERSONNE", nullable = false, insertable = false, updatable = false)
	public Personnes getPersonnes() {
		return this.personnes;
	}

	public void setPersonnes(Personnes personnes) {
		this.personnes = personnes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_PARABD", nullable = false, insertable = false, updatable = false)
	public Parabd getParabd() {
		return this.parabd;
	}

	public void setParabd(Parabd parabd) {
		this.parabd = parabd;
	}

	@Column(name = "ID_AUTEUR_PARABD", unique = true, nullable = false, length = 38)
	public String getIdAuteurParabd() {
		return this.idAuteurParabd;
	}

	public void setIdAuteurParabd(String idAuteurParabd) {
		this.idAuteurParabd = idAuteurParabd;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DC_AUTEURS_PARABD", nullable = false, length = 19)
	public Date getDcAuteursParabd() {
		return this.dcAuteursParabd;
	}

	public void setDcAuteursParabd(Date dcAuteursParabd) {
		this.dcAuteursParabd = dcAuteursParabd;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DM_AUTEURS_PARABD", nullable = false, length = 19)
	public Date getDmAuteursParabd() {
		return this.dmAuteursParabd;
	}

	public void setDmAuteursParabd(Date dmAuteursParabd) {
		this.dmAuteursParabd = dmAuteursParabd;
	}

}
