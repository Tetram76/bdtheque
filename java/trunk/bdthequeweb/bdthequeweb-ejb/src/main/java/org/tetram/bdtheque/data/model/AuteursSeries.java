package org.tetram.bdtheque.data.model;

// Generated 10 nov. 2012 15:28:13 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * AuteursSeries generated by hbm2java
 */
@Entity
@Table(name = "AUTEURS_SERIES", uniqueConstraints = @UniqueConstraint(columnNames = "ID_AUTEUR_SERIES"))
public class AuteursSeries implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private AuteursSeriesId id;
	private Series series;
	private Personnes personnes;
	private String idAuteurSeries;
	private Date dcAuteursSeries;
	private Date dmAuteursSeries;

	public AuteursSeries() {
	}

	public AuteursSeries(AuteursSeriesId id, Series series,
			Personnes personnes, String idAuteurSeries, Date dcAuteursSeries,
			Date dmAuteursSeries) {
		this.id = id;
		this.series = series;
		this.personnes = personnes;
		this.idAuteurSeries = idAuteurSeries;
		this.dcAuteursSeries = dcAuteursSeries;
		this.dmAuteursSeries = dmAuteursSeries;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "idSerie", column = @Column(name = "ID_SERIE", nullable = false, length = 38)),
			@AttributeOverride(name = "idPersonne", column = @Column(name = "ID_PERSONNE", nullable = false, length = 38)),
			@AttributeOverride(name = "metier", column = @Column(name = "METIER", nullable = false)) })
	public AuteursSeriesId getId() {
		return this.id;
	}

	public void setId(AuteursSeriesId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_SERIE", nullable = false, insertable = false, updatable = false)
	public Series getSeries() {
		return this.series;
	}

	public void setSeries(Series series) {
		this.series = series;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_PERSONNE", nullable = false, insertable = false, updatable = false)
	public Personnes getPersonnes() {
		return this.personnes;
	}

	public void setPersonnes(Personnes personnes) {
		this.personnes = personnes;
	}

	@Column(name = "ID_AUTEUR_SERIES", unique = true, nullable = false, length = 38)
	public String getIdAuteurSeries() {
		return this.idAuteurSeries;
	}

	public void setIdAuteurSeries(String idAuteurSeries) {
		this.idAuteurSeries = idAuteurSeries;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DC_AUTEURS_SERIES", nullable = false, length = 19)
	public Date getDcAuteursSeries() {
		return this.dcAuteursSeries;
	}

	public void setDcAuteursSeries(Date dcAuteursSeries) {
		this.dcAuteursSeries = dcAuteursSeries;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DM_AUTEURS_SERIES", nullable = false, length = 19)
	public Date getDmAuteursSeries() {
		return this.dmAuteursSeries;
	}

	public void setDmAuteursSeries(Date dmAuteursSeries) {
		this.dmAuteursSeries = dmAuteursSeries;
	}

}
