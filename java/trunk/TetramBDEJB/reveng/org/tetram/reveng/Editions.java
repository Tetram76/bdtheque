package org.tetram.reveng;

// Generated 1 mai 2012 09:51:32 by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Editions generated by hbm2java
 */
@Entity
@Table(name = "EDITIONS")
public class Editions implements java.io.Serializable {

	private String idEdition;
	private Collections collections;
	private Editeurs editeurs;
	private Albums albums;
	private Short anneeedition;
	private BigDecimal prix;
	private Short vo;
	private Short couleur;
	private String isbn;
	private Short prete;
	private Short stock;
	private Short dedicace;
	private Integer etat;
	private Integer reliure;
	private Integer typeedition;
	private Date dateachat;
	private Short gratuit;
	private Short offert;
	private Integer nombredepages;
	private Short orientation;
	private Short formatedition;
	private Short anneecote;
	private BigDecimal prixcote;
	private Date dcEditions;
	private Date dmEditions;
	private String numeroperso;
	private Short senslecture;
	private String notes;
	private Set coteses = new HashSet(0);
	private Set couvertureses = new HashSet(0);
	private Set coteses_1 = new HashSet(0);

	public Editions() {
	}

	public Editions(String idEdition, Editeurs editeurs, Albums albums,
			Date dcEditions, Date dmEditions) {
		this.idEdition = idEdition;
		this.editeurs = editeurs;
		this.albums = albums;
		this.dcEditions = dcEditions;
		this.dmEditions = dmEditions;
	}

	public Editions(String idEdition, Collections collections,
			Editeurs editeurs, Albums albums, Short anneeedition,
			BigDecimal prix, Short vo, Short couleur, String isbn, Short prete,
			Short stock, Short dedicace, Integer etat, Integer reliure,
			Integer typeedition, Date dateachat, Short gratuit, Short offert,
			Integer nombredepages, Short orientation, Short formatedition,
			Short anneecote, BigDecimal prixcote, Date dcEditions,
			Date dmEditions, String numeroperso, Short senslecture,
			String notes, Set coteses, Set couvertureses, Set coteses_1) {
		this.idEdition = idEdition;
		this.collections = collections;
		this.editeurs = editeurs;
		this.albums = albums;
		this.anneeedition = anneeedition;
		this.prix = prix;
		this.vo = vo;
		this.couleur = couleur;
		this.isbn = isbn;
		this.prete = prete;
		this.stock = stock;
		this.dedicace = dedicace;
		this.etat = etat;
		this.reliure = reliure;
		this.typeedition = typeedition;
		this.dateachat = dateachat;
		this.gratuit = gratuit;
		this.offert = offert;
		this.nombredepages = nombredepages;
		this.orientation = orientation;
		this.formatedition = formatedition;
		this.anneecote = anneecote;
		this.prixcote = prixcote;
		this.dcEditions = dcEditions;
		this.dmEditions = dmEditions;
		this.numeroperso = numeroperso;
		this.senslecture = senslecture;
		this.notes = notes;
		this.coteses = coteses;
		this.couvertureses = couvertureses;
		this.coteses_1 = coteses_1;
	}

	@Id
	@Column(name = "ID_EDITION", unique = true, nullable = false, length = 38)
	public String getIdEdition() {
		return this.idEdition;
	}

	public void setIdEdition(String idEdition) {
		this.idEdition = idEdition;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_COLLECTION")
	public Collections getCollections() {
		return this.collections;
	}

	public void setCollections(Collections collections) {
		this.collections = collections;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_EDITEUR", nullable = false)
	public Editeurs getEditeurs() {
		return this.editeurs;
	}

	public void setEditeurs(Editeurs editeurs) {
		this.editeurs = editeurs;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_ALBUM", nullable = false)
	public Albums getAlbums() {
		return this.albums;
	}

	public void setAlbums(Albums albums) {
		this.albums = albums;
	}

	@Column(name = "ANNEEEDITION")
	public Short getAnneeedition() {
		return this.anneeedition;
	}

	public void setAnneeedition(Short anneeedition) {
		this.anneeedition = anneeedition;
	}

	@Column(name = "PRIX", precision = 15)
	public BigDecimal getPrix() {
		return this.prix;
	}

	public void setPrix(BigDecimal prix) {
		this.prix = prix;
	}

	@Column(name = "VO")
	public Short getVo() {
		return this.vo;
	}

	public void setVo(Short vo) {
		this.vo = vo;
	}

	@Column(name = "COULEUR")
	public Short getCouleur() {
		return this.couleur;
	}

	public void setCouleur(Short couleur) {
		this.couleur = couleur;
	}

	@Column(name = "ISBN", length = 13)
	public String getIsbn() {
		return this.isbn;
	}

	public void setIsbn(String isbn) {
		this.isbn = isbn;
	}

	@Column(name = "PRETE")
	public Short getPrete() {
		return this.prete;
	}

	public void setPrete(Short prete) {
		this.prete = prete;
	}

	@Column(name = "STOCK")
	public Short getStock() {
		return this.stock;
	}

	public void setStock(Short stock) {
		this.stock = stock;
	}

	@Column(name = "DEDICACE")
	public Short getDedicace() {
		return this.dedicace;
	}

	public void setDedicace(Short dedicace) {
		this.dedicace = dedicace;
	}

	@Column(name = "ETAT")
	public Integer getEtat() {
		return this.etat;
	}

	public void setEtat(Integer etat) {
		this.etat = etat;
	}

	@Column(name = "RELIURE")
	public Integer getReliure() {
		return this.reliure;
	}

	public void setReliure(Integer reliure) {
		this.reliure = reliure;
	}

	@Column(name = "TYPEEDITION")
	public Integer getTypeedition() {
		return this.typeedition;
	}

	public void setTypeedition(Integer typeedition) {
		this.typeedition = typeedition;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATEACHAT", length = 10)
	public Date getDateachat() {
		return this.dateachat;
	}

	public void setDateachat(Date dateachat) {
		this.dateachat = dateachat;
	}

	@Column(name = "GRATUIT")
	public Short getGratuit() {
		return this.gratuit;
	}

	public void setGratuit(Short gratuit) {
		this.gratuit = gratuit;
	}

	@Column(name = "OFFERT")
	public Short getOffert() {
		return this.offert;
	}

	public void setOffert(Short offert) {
		this.offert = offert;
	}

	@Column(name = "NOMBREDEPAGES")
	public Integer getNombredepages() {
		return this.nombredepages;
	}

	public void setNombredepages(Integer nombredepages) {
		this.nombredepages = nombredepages;
	}

	@Column(name = "ORIENTATION")
	public Short getOrientation() {
		return this.orientation;
	}

	public void setOrientation(Short orientation) {
		this.orientation = orientation;
	}

	@Column(name = "FORMATEDITION")
	public Short getFormatedition() {
		return this.formatedition;
	}

	public void setFormatedition(Short formatedition) {
		this.formatedition = formatedition;
	}

	@Column(name = "ANNEECOTE")
	public Short getAnneecote() {
		return this.anneecote;
	}

	public void setAnneecote(Short anneecote) {
		this.anneecote = anneecote;
	}

	@Column(name = "PRIXCOTE", precision = 15)
	public BigDecimal getPrixcote() {
		return this.prixcote;
	}

	public void setPrixcote(BigDecimal prixcote) {
		this.prixcote = prixcote;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DC_EDITIONS", nullable = false, length = 19)
	public Date getDcEditions() {
		return this.dcEditions;
	}

	public void setDcEditions(Date dcEditions) {
		this.dcEditions = dcEditions;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DM_EDITIONS", nullable = false, length = 19)
	public Date getDmEditions() {
		return this.dmEditions;
	}

	public void setDmEditions(Date dmEditions) {
		this.dmEditions = dmEditions;
	}

	@Column(name = "NUMEROPERSO", length = 25)
	public String getNumeroperso() {
		return this.numeroperso;
	}

	public void setNumeroperso(String numeroperso) {
		this.numeroperso = numeroperso;
	}

	@Column(name = "SENSLECTURE")
	public Short getSenslecture() {
		return this.senslecture;
	}

	public void setSenslecture(Short senslecture) {
		this.senslecture = senslecture;
	}

	@Column(name = "NOTES", length = 0)
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "editions")
	public Set getCoteses() {
		return this.coteses;
	}

	public void setCoteses(Set coteses) {
		this.coteses = coteses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "editions")
	public Set getCouvertureses() {
		return this.couvertureses;
	}

	public void setCouvertureses(Set couvertureses) {
		this.couvertureses = couvertureses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "editions")
	public Set getCoteses_1() {
		return this.coteses_1;
	}

	public void setCoteses_1(Set coteses_1) {
		this.coteses_1 = coteses_1;
	}

}
