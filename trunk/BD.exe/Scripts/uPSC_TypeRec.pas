unit uPSC_TypeRec;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis.
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface

uses
  SysUtils, Classes, uPSComponent, uPSRuntime, uPSCompiler;

{ compile-time registration functions }
procedure SIRegister_TGenre(CL: TPSPascalCompiler);
procedure SIRegister_TEdition(CL: TPSPascalCompiler);
procedure SIRegister_TSerie(CL: TPSPascalCompiler);
procedure SIRegister_TCollection(CL: TPSPascalCompiler);
procedure SIRegister_TAlbum(CL: TPSPascalCompiler);
procedure SIRegister_TEditeur(CL: TPSPascalCompiler);
procedure SIRegister_TAuteur(CL: TPSPascalCompiler);
procedure SIRegister_TPersonnage(CL: TPSPascalCompiler);
procedure SIRegister_TCouverture(CL: TPSPascalCompiler);
procedure SIRegister_TBasePointeur(CL: TPSPascalCompiler);
procedure SIRegister_TypeRec(CL: TPSPascalCompiler);

implementation

uses
  Windows, DB, ComCtrls, JvUIB, StdCtrls, Commun, TypeRec;

(* === compile-time registration functions === *)

procedure SIRegister_TGenre(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TBasePointeur', 'TGenre') do
  with CL.AddClassN(CL.FindClass('TBasePointeur'), 'TGenre') do
  begin
    RegisterProperty('Genre', 'string', iptrw);
    RegisterProperty('Quantite', 'Integer', iptrw);
  end;
end;

procedure SIRegister_TEdition(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TBasePointeur', 'TEdition') do
  with CL.AddClassN(CL.FindClass('TBasePointeur'), 'TEdition') do
  begin
    RegisterProperty('AnneeEdition', 'Integer', iptrw);
    RegisterProperty('ISBN', 'string', iptrw);
    RegisterProperty('Editeur', 'TEditeur', iptrw);
    RegisterProperty('Collection', 'TCollection', iptrw);
  end;
end;

procedure SIRegister_TSerie(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TBasePointeur', 'TSerie') do
  with CL.AddClassN(CL.FindClass('TBasePointeur'), 'TSerie') do
  begin
    RegisterProperty('TitreSerie', 'string', iptrw);
    RegisterProperty('Editeur', 'TEditeur', iptrw);
    RegisterProperty('Collection', 'TCollection', iptrw);
  end;
end;

procedure SIRegister_TCollection(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TBasePointeur', 'TCollection') do
  with CL.AddClassN(CL.FindClass('TBasePointeur'), 'TCollection') do
  begin
    RegisterProperty('NomCollection', 'string', iptrw);
    RegisterProperty('Editeur', 'TEditeur', iptrw);
  end;
end;

procedure SIRegister_TAlbum(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TBasePointeur', 'TAlbum') do
  with CL.AddClassN(CL.FindClass('TBasePointeur'), 'TAlbum') do
  begin
    RegisterProperty('Tome', 'Integer', iptrw);
    RegisterProperty('TomeDebut', 'Integer', iptrw);
    RegisterProperty('TomeFin', 'Integer', iptrw);
    RegisterProperty('Titre', 'string', iptrw);
    RegisterProperty('Serie', 'string', iptrw);
    RegisterProperty('Editeur', 'string', iptrw);
    RegisterProperty('AnneeParution', 'Integer', iptrw);
    RegisterProperty('MoisParution', 'Integer', iptrw);
    RegisterProperty('Stock', 'Boolean', iptrw);
    RegisterProperty('Integrale', 'Boolean', iptrw);
    RegisterProperty('HorsSerie', 'Boolean', iptrw);
    RegisterProperty('Achat', 'Boolean', iptrw);
  end;
end;

procedure SIRegister_TEditeur(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TBasePointeur', 'TEditeur') do
  with CL.AddClassN(CL.FindClass('TBasePointeur'), 'TEditeur') do
  begin
    RegisterProperty('NomEditeur', 'string', iptrw);
  end;
end;

procedure SIRegister_TAuteur(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TBasePointeur', 'TAuteur') do
  with CL.AddClassN(CL.FindClass('TBasePointeur'), 'TAuteur') do
  begin
    RegisterProperty('Personne', 'TPersonnage', iptrw);
    RegisterProperty('Metier', 'Integer', iptrw);
  end;
end;

procedure SIRegister_TPersonnage(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TBasePointeur', 'TPersonnage') do
  with CL.AddClassN(CL.FindClass('TBasePointeur'), 'TPersonnage') do
  begin
    RegisterProperty('Nom', 'string', iptrw);
  end;
end;

procedure SIRegister_TCouverture(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TBasePointeur', 'TCouverture') do
  with CL.AddClassN(CL.FindClass('TBasePointeur'), 'TCouverture') do
  begin
    RegisterProperty('NewNom', 'string', iptrw);
    RegisterProperty('NewStockee', 'Boolean', iptrw);
    RegisterProperty('Categorie', 'Smallint', iptrw);
    RegisterProperty('sCategorie', 'string', iptrw);
  end;
end;

procedure SIRegister_TBasePointeur(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TObject', 'TBasePointeur') do
  with CL.AddClassN(CL.FindClass('TObject'), 'TBasePointeur') do
  begin
  end;
end;

procedure SIRegister_TypeRec(CL: TPSPascalCompiler);
begin
  SIRegister_TBasePointeur(CL);
  SIRegister_TCouverture(CL);
  SIRegister_TPersonnage(CL);
  SIRegister_TAuteur(CL);
  SIRegister_TEditeur(CL);
  SIRegister_TAlbum(CL);
  SIRegister_TCollection(CL);
  SIRegister_TSerie(CL);
  SIRegister_TEdition(CL);
  SIRegister_TGenre(CL);
end;

end.

